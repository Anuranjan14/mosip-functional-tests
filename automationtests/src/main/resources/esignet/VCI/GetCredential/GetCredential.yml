GetCredential:
   ESignet_GetCredential_uin_IdpAccessToken_all_Valid_Smoke:
      endPoint: /v1/esignet/vci/credential
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      validityCheckRequired: true
      inputTemplate: esignet/VCI/GetCredential/GetCredential
      outputTemplate: esignet/VCI/GetCredential/GetCredentialResult
      input: '{
      	"client_id": "$ID:CreateOIDCClient_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:GenerateTokenVCI_uin_Valid_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "MOSIPVerifiableCredential"}],
      	"@context": [{context: "https://www.w3.org/2018/credentials/v1"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOFJWT$"
}'
      output: '{
}'

   ESignet_GetCredential_uin_IdpAccessToken_NegCredScen1_Invalid_Format_Neg:
      endPoint: /v1/esignet/vci/credential
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      validityCheckRequired: true
      inputTemplate: esignet/VCI/GetCredential/GetCredential
      outputTemplate: esignet/error2
      input: '{
      	"client_id": "$ID:CreateOIDCClient_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:GenerateTokenVCI_uin_NegCredScen1_Smoke_sid_access_token$",
        "format": "dfsfd",
      	"type": [{types: "VerifiableCredential"}, {types: "MOSIPVerifiableCredential"}],
      	"@context": [{context: "https://www.w3.org/2018/credentials/v1"}],
      	"proof_type": "jwt",
        "proof_jwt": "$PROOFJWT$"
}'
      output: '{
      "error":"unsupported_credential_format"
}'

   ESignet_GetCredential_uin_IdpAccessToken_NegCredScen2_Invalid_Proof_Neg:
      endPoint: /v1/esignet/vci/credential
      role: resident
      checkErrorsOnlyInResponse: true
      restMethod: post
      validityCheckRequired: true
      inputTemplate: esignet/VCI/GetCredential/GetCredential
      outputTemplate: esignet/error2
      input: '{
      	"client_id": "$ID:CreateOIDCClient_all_Valid_Smoke_sid_clientId$",
        "idpAccessToken": "$ID:GenerateTokenVCI_uin_NegCredScen2_Smoke_sid_access_token$",
        "format": "ldp_vc",
      	"type": [{types: "VerifiableCredential"}, {types: "MOSIPVerifiableCredential"}],
      	"@context": [{context: "https://www.w3.org/2018/credentials/v1"}],
      	"proof_type": "jwt",
        "proof_jwt": "wewrt"
}'
      output: '{
      "error":"invalid_proof"
}'